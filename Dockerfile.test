# 多阶段构建 Dockerfile for FastText Serving
FROM rust:1.70 as builder

WORKDIR /app

# 复制 Cargo 文件
COPY Cargo.toml Cargo.lock ./
COPY build.rs ./

# 复制源代码
COPY src/ ./src/
COPY proto/ ./proto/

# 构建应用（Release模式）
RUN cargo build --release

# 运行时镜像
FROM ubuntu:20.04

# 安装运行时依赖
RUN apt-get update && \
    apt-get install -y \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# 创建工作目录
WORKDIR /app

# 从构建阶段复制可执行文件
COPY --from=builder /app/target/release/fasttext-serving /usr/local/bin/fasttext-serving

# 创建模型目录
RUN mkdir -p /app/models

# 暴露端口
EXPOSE 8000

# 设置默认环境变量
ENV RUST_LOG=fasttext_serving=info

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# 默认启动命令（需要挂载模型文件）
ENTRYPOINT ["/usr/local/bin/fasttext-serving"]
CMD ["--model", "/app/models/model.bin", "--address", "0.0.0.0", "--port", "8000", "--workers", "4"] 